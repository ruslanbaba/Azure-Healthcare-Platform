apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-engine
  namespace: healthcare-platform
  labels:
    app: analytics-engine
    component: microservice
    tier: analytics
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: analytics-engine
  template:
    metadata:
      labels:
        app: analytics-engine
        component: microservice
        tier: analytics
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: analytics-engine-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: analytics-engine
        image: {{ .Values.image.repository }}/analytics-engine:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "8001"
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
        - name: LOG_LEVEL
          value: {{ .Values.logging.level }}
        - name: DATA_LAKE_URL
          valueFrom:
            secretKeyRef:
              name: azure-secrets
              key: data-lake-url
        - name: KEY_VAULT_URL
          valueFrom:
            secretKeyRef:
              name: azure-secrets
              key: key-vault-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: connection-string
        - name: APPLICATIONINSIGHTS_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: monitoring-secrets
              key: app-insights-connection-string
        - name: ALLOWED_ORIGINS
          value: {{ .Values.security.allowedOrigins | join "," }}
        - name: ALLOWED_HOSTS
          value: {{ .Values.security.allowedHosts | join "," }}
        - name: CACHE_TTL
          value: "{{ .Values.cache.ttl }}"
        # Workload Identity
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: workload-identity
              key: client-id
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - analytics-engine
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "healthcare-workload"
        operator: "Equal"
        value: "analytics"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: analytics-engine-service
  namespace: healthcare-platform
  labels:
    app: analytics-engine
    component: microservice
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8001
    protocol: TCP
    name: http
  selector:
    app: analytics-engine

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: analytics-engine-sa
  namespace: healthcare-platform
  labels:
    app: analytics-engine
  annotations:
    azure.workload.identity/client-id: {{ .Values.workloadIdentity.clientId }}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: analytics-engine-netpol
  namespace: healthcare-platform
spec:
  podSelector:
    matchLabels:
      app: analytics-engine
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8001
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow Azure services (Data Lake, Key Vault)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analytics-engine-hpa
  namespace: healthcare-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analytics-engine
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
