# Loki for Centralized Logging
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: monitoring
data:
  loki.yaml: |
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      log_level: warn
    
    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    
    query_scheduler:
      max_outstanding_requests_per_tenant: 2048
    
    frontend:
      max_outstanding_per_tenant: 2048
      compress_responses: true
    
    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100
    
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    
    ruler:
      alertmanager_url: http://alertmanager:9093
      storage:
        type: local
        local:
          directory: /loki/rules
      rule_path: /loki/rules
      ring:
        kvstore:
          store: inmemory
      enable_api: true
    
    analytics:
      reporting_enabled: false
    
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_label_name_length: 1024
      max_label_value_length: 4096
      max_label_names_per_series: 30
      max_metadata_length: 1024
      max_streams_per_user: 10000
      max_line_size: 256000
      max_entries_limit_per_query: 5000
      max_chunks_per_query: 2000000
      max_query_length: 721h
      max_query_parallelism: 32
      max_query_series: 500
      cardinality_limit: 100000
      max_streams_matchers_per_query: 1000
      max_concurrent_tail_requests: 10
    
    chunk_store_config:
      max_look_back_period: 0s
    
    table_manager:
      retention_deletes_enabled: true
      retention_period: 336h  # 14 days for non-audit logs
    
    compactor:
      working_directory: /loki/boltdb-shipper-compactor
      shared_store: filesystem
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150

---
# Loki Rules for Healthcare Monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-rules
  namespace: monitoring
data:
  healthcare.yml: |
    groups:
    - name: healthcare-logs
      rules:
      - alert: HighErrorLogRate
        expr: |
          sum(rate({namespace="healthcare-platform"} |= "ERROR" [5m])) by (app) > 0.1
        for: 2m
        labels:
          severity: warning
          service: "{{ $labels.app }}"
        annotations:
          summary: "High error log rate detected"
          description: "Error log rate for {{ $labels.app }} is above 0.1/sec"
      
      - alert: CriticalErrorLogs
        expr: |
          sum(rate({namespace="healthcare-platform"} |= "CRITICAL" [1m])) by (app) > 0
        for: 0m
        labels:
          severity: critical
          service: "{{ $labels.app }}"
        annotations:
          summary: "Critical errors detected in logs"
          description: "Critical errors found in {{ $labels.app }} logs"
      
      - alert: HIPAAViolationLogs
        expr: |
          sum(rate({namespace="healthcare-platform"} |~ "(?i)(hipaa|violation|unauthorized|breach)" [5m])) by (app) > 0
        for: 0m
        labels:
          severity: critical
          compliance: hipaa
        annotations:
          summary: "Potential HIPAA violation detected in logs"
          description: "HIPAA-related issues found in {{ $labels.app }} logs"
      
      - alert: UnauthorizedAccessLogs
        expr: |
          sum(rate({namespace="healthcare-platform"} |~ "(?i)(unauthorized|forbidden|access.denied)" [5m])) by (app) > 0.05
        for: 1m
        labels:
          severity: warning
          security: access-control
        annotations:
          summary: "High unauthorized access attempts"
          description: "Multiple unauthorized access attempts detected in {{ $labels.app }}"
      
      - alert: DataExportLogs
        expr: |
          sum(rate({namespace="healthcare-platform"} |~ "(?i)(export|download|extract).*patient" [5m])) by (app, user) > 0.1
        for: 2m
        labels:
          severity: warning
          compliance: hipaa
          data-protection: export
        annotations:
          summary: "High data export activity"
          description: "Unusual data export activity detected for user {{ $labels.user }} in {{ $labels.app }}"

---
# Loki Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: loki
        image: grafana/loki:2.9.0
        args:
        - -config.file=/etc/loki/loki.yaml
        - -target=all
        ports:
        - containerPort: 3100
          name: http-metrics
        - containerPort: 9095
          name: grpc
        env:
        - name: JAEGER_AGENT_HOST
          value: "tempo"
        - name: JAEGER_AGENT_PORT
          value: "6831"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
        - name: loki-rules
          mountPath: /loki/rules
        - name: loki-storage
          mountPath: /loki
        livenessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 45
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 45
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
      - name: loki-rules
        configMap:
          name: loki-rules
      - name: loki-storage
        persistentVolumeClaim:
          claimName: loki-storage

---
# Loki PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: managed-premium

---
# Loki Service
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: monitoring
  labels:
    app: loki
spec:
  type: ClusterIP
  ports:
  - port: 3100
    targetPort: 3100
    name: http-metrics
  - port: 9095
    targetPort: 9095
    name: grpc
  selector:
    app: loki

---
# Tempo for Distributed Tracing
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
  namespace: monitoring
data:
  tempo.yaml: |
    server:
      http_listen_port: 3200
      log_level: warn
    
    distributor:
      receivers:
        jaeger:
          protocols:
            thrift_http:
              endpoint: 0.0.0.0:14268
            grpc:
              endpoint: 0.0.0.0:14250
            thrift_binary:
              endpoint: 0.0.0.0:6832
            thrift_compact:
              endpoint: 0.0.0.0:6831
        zipkin:
          endpoint: 0.0.0.0:9411
        otlp:
          protocols:
            http:
              endpoint: 0.0.0.0:4318
            grpc:
              endpoint: 0.0.0.0:4317
        opencensus:
          endpoint: 0.0.0.0:55678
    
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        tokens_file_path: /var/tempo/tokens.json
    
    memberlist:
      abort_if_cluster_join_fails: false
      bind_port: 7946
      join_members:
      - tempo:7946
    
    querier:
      frontend_worker:
        frontend_address: tempo-query-frontend:9095
    
    query_frontend:
      search:
        duration_slo: 5s
        throughput_bytes_slo: 1.073741824e+09
      trace_by_id:
        duration_slo: 5s
    
    compactor:
      compaction:
        compaction_window: 1h
        max_block_bytes: 1073741824
        block_retention: 1h
        compacted_block_retention: 10m
    
    storage:
      trace:
        backend: local
        block:
          bloom_filter_false_positive: .05
          index_downsample_bytes: 1000
          encoding: zstd
        local:
          path: /var/tempo/traces
        pool:
          max_workers: 100
          queue_depth: 10000

---
# Tempo Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
  namespace: monitoring
  labels:
    app: tempo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: tempo
        image: grafana/tempo:2.2.0
        args:
        - -config.file=/etc/tempo/tempo.yaml
        - -mem-ballast-size-mbs=1024
        ports:
        - containerPort: 3200
          name: http
        - containerPort: 6831
          name: jaeger-thrift-c
          protocol: UDP
        - containerPort: 6832
          name: jaeger-thrift-b
          protocol: UDP
        - containerPort: 14250
          name: jaeger-grpc
        - containerPort: 14268
          name: jaeger-http
        - containerPort: 9411
          name: zipkin
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        - containerPort: 55678
          name: opencensus
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: tempo-config
          mountPath: /etc/tempo
        - name: tempo-storage
          mountPath: /var/tempo
        livenessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 30
      volumes:
      - name: tempo-config
        configMap:
          name: tempo-config
      - name: tempo-storage
        persistentVolumeClaim:
          claimName: tempo-storage

---
# Tempo PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tempo-storage
  namespace: monitoring
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  storageClassName: managed-premium

---
# Tempo Service
apiVersion: v1
kind: Service
metadata:
  name: tempo
  namespace: monitoring
  labels:
    app: tempo
spec:
  type: ClusterIP
  ports:
  - port: 3200
    targetPort: 3200
    name: http
  - port: 6831
    targetPort: 6831
    name: jaeger-thrift-c
    protocol: UDP
  - port: 6832
    targetPort: 6832
    name: jaeger-thrift-b
    protocol: UDP
  - port: 14250
    targetPort: 14250
    name: jaeger-grpc
  - port: 14268
    targetPort: 14268
    name: jaeger-http
  - port: 9411
    targetPort: 9411
    name: zipkin
  - port: 4317
    targetPort: 4317
    name: otlp-grpc
  - port: 4318
    targetPort: 4318
    name: otlp-http
  - port: 55678
    targetPort: 55678
    name: opencensus
  selector:
    app: tempo

---
# Fluent Bit for Log Collection
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: monitoring
  labels:
    app: fluent-bit
spec:
  selector:
    matchLabels:
      app: fluent-bit
  template:
    metadata:
      labels:
        app: fluent-bit
    spec:
      serviceAccountName: fluent-bit
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: fluent-bit
        image: fluent/fluent-bit:2.1.8
        ports:
        - containerPort: 2020
          name: http
        env:
        - name: FLUENT_CONF
          value: fluent-bit.conf
        - name: LOKI_URL
          value: http://loki:3100/loki/api/v1/push
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: etcmachineid
          mountPath: /etc/machine-id
          readOnly: true
      volumes:
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: etcmachineid
        hostPath:
          path: /etc/machine-id
          type: File

---
# Fluent Bit ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: monitoring
data:
  fluent-bit.conf: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level warn
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
    
    [INPUT]
        Name tail
        Path /var/log/containers/*healthcare-platform*.log
        Parser docker
        Tag kube.*
        Refresh_Interval 5
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        Skip_Empty_Lines On
    
    [INPUT]
        Name tail
        Path /var/log/containers/*monitoring*.log
        Parser docker
        Tag kube.*
        Refresh_Interval 5
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        Skip_Empty_Lines On
    
    [FILTER]
        Name kubernetes
        Match kube.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix kube.var.log.containers.
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off
        Annotations Off
        Labels On
    
    [FILTER]
        Name grep
        Match kube.*
        Regex $kubernetes['namespace_name'] ^(healthcare-platform|monitoring)$
    
    [FILTER]
        Name modify
        Match kube.*
        Add cluster healthcare-platform
        Add environment {{ .Values.environment }}
    
    [OUTPUT]
        Name loki
        Match kube.*
        Url http://loki:3100/loki/api/v1/push
        Labels cluster=healthcare-platform, environment={{ .Values.environment }}
        LabelKeys kubernetes_namespace_name,kubernetes_pod_name,kubernetes_container_name
        BatchWait 1s
        BatchSize 1048576
        LineFormat json
        LogLevel warn
  
  parsers.conf: |
    [PARSER]
        Name   apache
        Format regex
        Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z
    
    [PARSER]
        Name   nginx
        Format regex
        Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*)  +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z
    
    [PARSER]
        Name   json
        Format json
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z
    
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

---
# Fluent Bit ServiceAccount and RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - pods/logs
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit
subjects:
- kind: ServiceAccount
  name: fluent-bit
  namespace: monitoring
